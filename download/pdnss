#!/bin/bash
trap 'EX=1;exit' INT 
trap 'EX=1;exit' TERM
EX=0

NSIPLIST='http://public-dns.info/nameservers.txt'

CACHE=$(dirname $(realpath $0))/cacheip.txt
echo '' > $CACHE

has_dns=3
has_domain=3

for arg in $*
do
    if [ $has_dns -eq 1 ];then
        NSIPLIST=$arg
        has_dns=2
        continue
    fi
    if [ $has_domain -eq 1 ];then
        DOMAIN=$arg
        has_domain=2
        continue
    fi
    case $arg in
    -h)
        echo "Usage: $0 -n www.domain.com -d http://test11.com/ns.list.txt"
        exit
        ;;
    -d)
        has_dns=1
        ;;
    -n)
        has_domain=1
        ;;
    esac

done


if [ $# -eq 0 ];then
    DOMAIN='www.google.com'
    A='*'
elif [ $has_dns -eq 2 ] && [ $has_domain -eq 3 ]; then
    DOMAIN='www.google.com'
    A='*'
elif [ $has_dns -eq 3 ] && [ $has_domain -eq 3 ];then
    DOMAIN=$1
fi

IFS='.' read -ra NSP <<< "$DOMAIN"
if [ ${#NSP[@]} -lt 3 ];then
    A='@'
else
    SUB=$[${#NSP[@]} - 2]
    A=${NSP[@]:0:$SUB}
fi
echo "Fetch $DOMAIN in $NSIPLIST"
curl -s $NSIPLIST | while read -ra LINE;do
    if [ $EX -eq 1 ];then
        exit
    fi
    ns=$LINE
    NS_IPV6=`echo $ns | grep ':'`
    NS_CHK_IPV6=$?
    if [ $NS_CHK_IPV6 -eq 0 ];then
        continue
    fi
    echo -ne "DNS $ns                 \r"
    dig $DOMAIN @$ns +tcp | while read -ra LINE;do
{
        echo $LINE
        if [ $EX -eq 1 ];then
            exit
        fi
        cont=0
        F=${LINE[0]:0:1} 
        case $F in
            ';')
            continue
            ;;
        esac

        if [ -z $F ];then
            continue
        fi

        if [ "${LINE[3]}" == 'A' ];then
            IP=${LINE[4]}
            IPV6=`echo $IP | grep ':'`
            CHK_IPV6=$?
            if [ $CHK_IPV6 -eq 0 ];then
               continue
            fi
            grep -q $IP $CACHE
            RET=$?
            if [ $RET -eq 0 ];then
                continue
            fi
            echo $IP >> $CACHE
            #timeout 5 bash -c "echo >/dev/tcp/$IP/443" >/dev/null 2>&1 && echo "$A IN A $IP"
            #OPENRE=`echo "\n" | timeout 10 openssl s_client -host $IP -port 443 -verify_hostname $ds -4 -quiet --verify 1 -prexit -crlf  2>&1`
            curl -s --retry 0 --connect-timeout 3 --resolve $DOMAIN:443:$IP https://$DOMAIN > /dev/null
	        ORN=$?
            if [ $ORN -gt 0 ];then
                echo -ne "check $IP timeout   \r"
    	    	continue
	        elif [ $ORN -eq 0 ];then
		        echo -e "\r$A IN A $IP"
            fi
            wait
        fi
        
}
    done
    wait
done
